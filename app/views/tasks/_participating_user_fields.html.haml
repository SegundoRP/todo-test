.nested-fields
	%hr
	.text-right
	.row
		.col-4
			= f.input :user_id, label: 'Usuario', as: :select, collection: User.all - [current_user], label_method: -> (u) { u.email }
		.col-4
			= f.input :role, label: 'Rol', as: :select, collection: Participant.roles, value_method: -> (r) { r[0] }
		.col-4.text-left
			.mt-2
			= link_to_remove_association f, class: 'btn btn-warning btn-sm btn-flat mt-4' do
				.fas.fa-trash






-# -En el bloque de código anterior estamos introduciendo dos parámetros muy importantes de simple_form en términos de renderización de elementos de tipo select, se trata de los parámetros label_method y value_method quienes me permitirán acceder a la colección parametrizada en collection y acceder a la iteración de forma directa usando métodos Lambda (similar a las funciones anónimas, aunque en Ruby no existe a título propio el concepto de función). Un elemento select de HTML tiene options, e internamente estas tienen un sistema de clave valor value:label, estos parámetros label_method y value_method se usan para manipular ese valor en el momento en el que el constructor de formularios esté creando el elemento select completo

-# En el primer parámetro label_method hará que en lugar de imprimir la referencia del usuario en HTML, nos imprima el correo del usuario, un comportamiento similar tiene el segundo parámetro value_method el cual nos asignará al valor el término numérico del rol definido en el método enum dentro del modelo Participant.
